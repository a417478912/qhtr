<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qhtr.dao.FundFlowMapper" >
  <resultMap id="BaseResultMap" type="com.qhtr.model.FundFlow" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="change_money" property="changeMoney" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, change_money, type, create_time, user_id, store_id, reason
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fund_flow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fund_flow
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qhtr.model.FundFlow" >
    insert into fund_flow (id, change_money, type, 
      create_time, user_id, store_id, 
      reason)
    values (#{id,jdbcType=INTEGER}, #{changeMoney,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, 
      #{reason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qhtr.model.FundFlow" >
    insert into fund_flow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="changeMoney != null" >
        change_money,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="reason != null" >
        reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="changeMoney != null" >
        #{changeMoney,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qhtr.model.FundFlow" >
    update fund_flow
    <set >
      <if test="changeMoney != null" >
        change_money = #{changeMoney,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qhtr.model.FundFlow" >
    update fund_flow
    set change_money = #{changeMoney,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>