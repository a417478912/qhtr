<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qhtr.dao.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.qhtr.model.Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="goods_code" property="goodsCode" jdbcType="VARCHAR" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="thumb" property="thumb" jdbcType="VARCHAR" />
    <result column="result_picture" property="resultPicture" jdbcType="VARCHAR" />
    <result column="detail_pictures" property="detailPictures" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="vip_price" property="vipPrice" jdbcType="INTEGER" />
    <result column="special_selling_price" property="specialSellingPrice" jdbcType="INTEGER" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="details" property="details" jdbcType="VARCHAR" />
    <result column="isDefault" property="isdefault" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="edit_time" property="editTime" jdbcType="TIMESTAMP" />
    <result column="collect_num" property="collectNum" jdbcType="INTEGER" />
    <result column="sell_num" property="sellNum" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, goods_code as goodsCode, store_id as storeId, name, thumb, result_picture as resultPicture, detail_pictures as detailPictures, price, vip_price as vipPrice, 
    special_selling_price as specialSellingPrice, stock, details, isDefault, status, create_time as createTime, edit_time as editTime, 
    collect_num as collectNum, sell_num as sellNum, sort
  </sql>
  <!-- 根据商品ID查询商品信息 -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods_goods g
    where g.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qhtr.model.Goods" useGeneratedKeys="true" keyProperty="id">
    insert into goods_goods (id, goods_code, store_id, 
      name, thumb, result_picture, 
      detail_pictures, price, vip_price, 
      special_selling_price, stock, details, 
      isDefault, status, create_time, 
      edit_time, collect_num, sell_num, 
      sort)
    values (#{id,jdbcType=INTEGER}, #{goodsCode,jdbcType=VARCHAR}, #{storeId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{thumb,jdbcType=VARCHAR}, #{resultPicture,jdbcType=VARCHAR}, 
      #{detailPictures,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, #{vipPrice,jdbcType=INTEGER}, 
      #{specialSellingPrice,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, #{details,jdbcType=VARCHAR}, 
      #{isdefault,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{editTime,jdbcType=TIMESTAMP}, #{collectNum,jdbcType=INTEGER}, #{sellNum,jdbcType=INTEGER}, 
      #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qhtr.model.Goods" >
    insert into goods_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodsCode != null" >
        goods_code,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="thumb != null" >
        thumb,
      </if>
      <if test="resultPicture != null" >
        result_picture,
      </if>
      <if test="detailPictures != null" >
        detail_pictures,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="vipPrice != null" >
        vip_price,
      </if>
      <if test="specialSellingPrice != null" >
        special_selling_price,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="details != null" >
        details,
      </if>
      <if test="isdefault != null" >
        isDefault,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="editTime != null" >
        edit_time,
      </if>
      <if test="collectNum != null" >
        collect_num,
      </if>
      <if test="sellNum != null" >
        sell_num,
      </if>
      <if test="sort != null" >
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goodsCode != null" >
        #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="thumb != null" >
        #{thumb,jdbcType=VARCHAR},
      </if>
      <if test="resultPicture != null" >
        #{resultPicture,jdbcType=VARCHAR},
      </if>
      <if test="detailPictures != null" >
        #{detailPictures,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="vipPrice != null" >
        #{vipPrice,jdbcType=INTEGER},
      </if>
      <if test="specialSellingPrice != null" >
        #{specialSellingPrice,jdbcType=INTEGER},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="details != null" >
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="isdefault != null" >
        #{isdefault,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null" >
        #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="collectNum != null" >
        #{collectNum,jdbcType=INTEGER},
      </if>
      <if test="sellNum != null" >
        #{sellNum,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qhtr.model.Goods" >
    update goods_goods
    <set >
      <if test="goodsCode != null" >
        goods_code = #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="thumb != null" >
        thumb = #{thumb,jdbcType=VARCHAR},
      </if>
      <if test="resultPicture != null" >
        result_picture = #{resultPicture,jdbcType=VARCHAR},
      </if>
      <if test="detailPictures != null" >
        detail_pictures = #{detailPictures,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="vipPrice != null" >
        vip_price = #{vipPrice,jdbcType=INTEGER},
      </if>
      <if test="specialSellingPrice != null" >
        special_selling_price = #{specialSellingPrice,jdbcType=INTEGER},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="details != null" >
        details = #{details,jdbcType=VARCHAR},
      </if>
      <if test="isdefault != null" >
        isDefault = #{isdefault,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="editTime != null" >
        edit_time = #{editTime,jdbcType=TIMESTAMP},
      </if>
      <if test="collectNum != null" >
        collect_num = #{collectNum,jdbcType=INTEGER},
      </if>
      <if test="sellNum != null" >
        sell_num = #{sellNum,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qhtr.model.Goods" >
    update goods_goods
    set goods_code = #{goodsCode,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      thumb = #{thumb,jdbcType=VARCHAR},
      result_picture = #{resultPicture,jdbcType=VARCHAR},
      detail_pictures = #{detailPictures,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      vip_price = #{vipPrice,jdbcType=INTEGER},
      special_selling_price = #{specialSellingPrice,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      details = #{details,jdbcType=VARCHAR},
      isDefault = #{isdefault,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      edit_time = #{editTime,jdbcType=TIMESTAMP},
      collect_num = #{collectNum,jdbcType=INTEGER},
      sell_num = #{sellNum,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

   <!--以下自定义方法 --> 
  <select id="selectByConditions" resultMap="BaseResultMap" parameterType="com.qhtr.model.Goods" >
    select 
    <include refid="Base_Column_List" />
    from goods_goods
    <where>
   	 <if test="1 == 1" >
        1 = 1
      </if>
     <if test="storeId != null">
        and store_id = #{storeId,jdbcType=INTEGER}
      </if>
     <if test="goodsCode != null">
        and goods_code = #{goodsCode,jdbcType=VARCHAR}
      </if>
      <if test="name != null">
        and name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="thumb != null">
        and thumb = #{thumb,jdbcType=VARCHAR}
      </if>
      <if test="price != null">
        and price = #{price,jdbcType=INTEGER}
      </if>
      <if test="vipPrice != null">
        and vip_price = #{vipPrice,jdbcType=INTEGER}
      </if>
      <if test="specialSellingPrice != null">
        and special_selling_price = #{specialSellingPrice,jdbcType=INTEGER}
      </if>
      <if test="stock != null">
        and stock = #{stock,jdbcType=INTEGER}
      </if>
      <if test="isdefault != null">
        and isDefault = #{isdefault,jdbcType=INTEGER}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=INTEGER}
      </if>
      <if test="createTime != null">
        and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="details != null">
        and details = #{details,jdbcType=LONGVARCHAR}
      </if>
      and status = 1 
      order by create_time desc
    </where>
  	</select>
  	
  	<!-- 通过商铺id和商品状态查找商品 -->
  <select id="selectListByStoreAndType" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from goods_goods
    <where>
  	   store_id = #{storeId,jdbcType=INTEGER}
  	   and status = #{status,jdbcType=INTEGER}
    </where>
	order by sort desc, edit_time desc
  	</select>
  	
  	
  	<!-- 周边好货 -->
  <select id="selectGoodsListByGoodAround" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_goods
    where status = 1
    order by id desc
  	</select>
  	
  	
  	<!-- 通过内容搜索 -->
  <select id="selectGoodsBySearch" resultMap="BaseResultMap"  parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from goods_goods
    where name like CONCAT("%",#{searchContent,jdbcType=VARCHAR},"%")
    and status = 1
    order by id desc
  	</select>
  	
  	<!-- 查找分类中的商品  买家版          -->                    
	<select id="getGoodsByClass_App" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	SELECT g.id as id,g.goods_code as goods_code,g.name as name,g.detail_pictures as detail_pictures,g.stock as stock,g.details as details,g.collect_num as collect_num,g.sell_num as sell_num
	from goods_goods g,goods_mid_goods_classes c
	WHERE g.id = c.goods_id
	AND c.goods_classes_id = #{classId,jdbcType=INTEGER}
	GROUP BY g.id desc
  	</select>
  	
  	<select id="selectListByClassIdAndStoreId" parameterType="com.qhtr.model.GoodsClasses" resultType="com.qhtr.model.Goods">
  	select  g.id, goods_code as goodsCode, store_id as storeId, name, thumb, result_picture as resultPicture, detail_pictures as detailPictures, price, vip_price as vipPrice, 
    special_selling_price as specialSellingPrice, stock, details, isDefault, status, create_time as createTime, edit_time as editTime, 
    collect_num as collectNum, sell_num as sellNum, sort
    from goods_goods g 
    LEFT JOIN goods_mid_goods_classes m 
    ON g.id = m.goods_id
    <where>
    	1=1
    	<if test="storeId != null">
    		and g.store_id = #{storeId}
    	</if>
    	<if test="id != null">
    		and m.goods_classes_id = #{id}
    	</if>
    </where>
  	</select>
  	
  	<select id="selectListByStoreIdAndStatus" parameterType="com.qhtr.model.Goods" resultMap="BaseResultMap">
  		select
  		<include refid="Base_Column_List" />
  		from goods_goods g
  		where g.store_id=#{storeId} and g.status = #{status}
  	</select>
  	
  	<!-- 通过二级分类查询商品列表 -->
  	<select id="selectGoodsBySecondClassId" parameterType="Integer" resultMap="BaseResultMap">
  		select g.* 
  		from goods_goods g 
  		LEFT JOIN goods_mid_second_class m 
  		on g.id = m.goods_id 
  		where m.second_class_id = #{parameter}
  		and g.status = 1
  		order by g.sell_num desc
  	</select>
  	
  	<!-- 通过店铺查询商品列表 -->
  	<select id="selectListByStoreId" parameterType="Integer" resultMap="BaseResultMap">
  		select g.*
  		from goods_goods g
  		where g.store_id = #{parameter} and g.status = 1 limit 10
  	</select>
  	
  	<!-- 通过行业分类查询商品 -->
  	<select id="selectGoodsByCategoryId" parameterType="Integer" resultMap="BaseResultMap">
  		select g.* 
  		from goods_goods g
  		where g.store_id in (
  		select s.id 
  		from seller_store s 
  		where s.category_id = #{parameter}
  		)
  		and g.status = 1
  	</select>
  	
  	<!-- 通过行业分类查询新品 -->
  	<select id="selectNewProductByCategoryId" parameterType="java.util.Map" resultMap="BaseResultMap">
  		select g.* 
  		from goods_goods g
  		where g.store_id in (
  		select s.id 
  		from seller_store s 
  		where s.category_id = #{categoryId}
  		)
  		and g.status = 1
  		and (g.create_time BETWEEN #{startTime} and #{endTime})
  		order by g.create_time desc
  	</select>
  	
  	<!-- 通过店铺id和二级分类id查询商品列表 -->
  	<select id="selectGoodsByStoreIdAndSecondClassId" parameterType="java.util.Map" resultType="com.qhtr.model.Goods">
  		select 
  		g.id, g.goods_code as goodsCode, g.store_id as storeId, g.name, g.thumb,
  		g.result_picture as resultPicture, g.detail_pictures as detailPictures, g.price, g.vip_price as vipPrice, 
    	g.special_selling_price as specialSellingPrice, g.stock, g.details, g.isDefault, g.status, g.create_time as createTime, 
    	g.edit_time as editTime,g.collect_num as collectNum, g.sell_num as sellNum, g.sort 
  		from goods_goods g 
  		LEFT JOIN goods_mid_second_class m 
  		on g.id = m.goods_id 
  		where m.second_class_id = #{secondClassId} 
  		and g.store_id = #{storeId}
  	</select>
  	
  	<!-- 查询不在二级分类中的商品 -->
  	<select id="getGoodsListNotInSecondClass" parameterType="java.util.Map" resultType="com.qhtr.model.Goods">
  		select 
  		g.id, g.goods_code as goodsCode, g.store_id as storeId, g.name, g.thumb,
  		g.result_picture as resultPicture, g.detail_pictures as detailPictures, g.price, g.vip_price as vipPrice, 
    	g.special_selling_price as specialSellingPrice, g.stock, g.details, g.isDefault, g.status, g.create_time as createTime, 
    	g.edit_time as editTime,g.collect_num as collectNum, g.sell_num as sellNum, g.sort 
  		from goods_goods g 
  		where g.store_id = #{storeId}
  		and g.`status` = 1 
  		and g.id 
  		not in (select m.goods_id from goods_mid_second_class m)
  	</select>
  	
  	<!-- 查询二级分类中的商品数量 -->
  	<select id="selectCountBySecondClassIdAndStoreId" parameterType="java.util.Map" resultType="Integer">
  		select count(g.id) 
  		from goods_goods g
  		left join goods_mid_second_class m
  		on g.id = m.goods_id
  		where m.second_class_id = #{secondClassId}
  		and g.store_id = #{storeId}
  	</select>
  	
</mapper>